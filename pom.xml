<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd ">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.apereo.cas</groupId>
    <artifactId>cas-overlay</artifactId>
    <packaging>war</packaging>
    <version>1.0</version>

    <properties>
        <cas.version>5.3.11</cas.version>
        <springboot.version>2.1.6.RELEASE</springboot.version>
        <!-- app.server could be -jetty, -undertow, -tomcat, or blank if you plan to provide appserver -->
        <app.server></app.server>

        <cas.dir>${project.build.directory}/etc/cas</cas.dir>
        <cas.service.definition>Acentic-1503925298.json</cas.service.definition>

        <mainClassName>org.springframework.boot.loader.WarLauncher</mainClassName>
        <isExecutable>false</isExecutable>
        <manifestFileToUse>${project.build.directory}/war/work/org.apereo.cas/cas-server-webapp${app.server}/META-INF/MANIFEST.MF</manifestFileToUse>

        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Default Settings -->
        <server.addr>cas.acentic.com</server.addr>
        <acs.addr>acs.acentic.com</acs.addr>        
        <jdbc.url>jdbc:mysql://acsdb.csbzp1p3p8vb.eu-west-1.rds.amazonaws.com:3306/cloud_admin</jdbc.url>
        <jdbc.user>acsuser</jdbc.user>
        <jdbc.pass>prodac</jdbc.pass>
        <cas.throttle.rangeSeconds>12</cas.throttle.rangeSeconds>


        <!-- Logging -->
        <logging.config>file:/etc/cas/config/log4j2.xml</logging.config>
        <cas.log.dir>/var/log/tomcat</cas.log.dir>
        <log4j.cas>info</log4j.cas>
        <log4j.cas.webflow>info</log4j.cas.webflow>
        <log4j.cas.service.persondir>info</log4j.cas.service.persondir>
        <log4j.spring>warn</log4j.spring>
        <log4j.org.thymeleaf>warn</log4j.org.thymeleaf>
        <log4j.org.spring.webflow>warn</log4j.org.spring.webflow>
        <log4j.cas.web.support>warn</log4j.cas.web.support>
    </properties>

    <build>
        <finalName>cas</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
            </resource>
        </resources>
        <plugins>
            
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>/etc/cas</directory>
                            <includes>
                                <include>**/*.*</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.rimerosolutions.maven.plugins</groupId>
                <artifactId>wrapper-maven-plugin</artifactId>
                <version>0.0.5</version>
                <configuration>
                    <verifyDownload>true</verifyDownload>
                    <checksumAlgorithm>MD5</checksumAlgorithm>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${springboot.version}</version>
                <configuration>
                    <mainClass>${mainClassName}</mainClass>
                    <addResources>true</addResources>
                    <executable>${isExecutable}</executable>
                    <layout>WAR</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <warName>cas</warName>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <recompressZippedFiles>false</recompressZippedFiles>
                    <archive>
                        <compress>false</compress>
                        <manifestFile>${manifestFileToUse}</manifestFile>
                    </archive>
                    <overlays>
                        <overlay>
                            <groupId>org.apereo.cas</groupId>
                            <artifactId>cas-server-webapp${app.server}</artifactId>
                            <excludes>
                                <exclude>log4j2.xml</exclude>
                                <exclude>/WEB-INF/classes/log4j2.xml</exclude>
                            </excludes>
                        </overlay>
                    </overlays>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>deploy-config</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${cas.dir}/config</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/etc/cas/config</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/*.properties</include>
                                        <include>**/log4j2.xml</include>
                                        <include>**/*.html</include>
                                        <include>**/keystore.*</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>deploy-service</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${cas.dir}/services</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/etc/cas/services</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/${cas.service.definition}</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>deploy-keystore</id>
                        <!-- Copy keystore for spring boot to ${basedir}/etc/cas
                        -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${cas.dir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/etc/cas</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>**/${keystore.file}</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                </executions>                    
            </plugin>

        </plugins>

    </build>



    <repositories>
        <repository>
            <id>sonatype-releases</id>
            <url>http://oss.sonatype.org/content/repositories/releases/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>sonatype-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        <repository>
            <id>shibboleth-releases</id>
            <url>https://build.shibboleth.net/nexus/content/repositories/releases</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.apereo.cas</groupId>
            <artifactId>cas-server-webapp${app.server}</artifactId>
            <version>${cas.version}</version>
            <type>war</type>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apereo.cas</groupId>
            <artifactId>cas-server-support-json-service-registry</artifactId>
            <version>${cas.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apereo.cas</groupId>
            <artifactId>cas-server-support-jdbc</artifactId>
            <version>${cas.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.apereo.cas</groupId>
            <artifactId>cas-server-support-jdbc-authentication</artifactId>
            <version>${cas.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apereo.cas</groupId>
            <artifactId>cas-server-support-rest</artifactId>
            <version>${cas.version}</version>
        </dependency>

        <dependency>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
            <version>0.9.5.1</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.21</version>
        </dependency>



    </dependencies>

    <profiles>
        <profile>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <id>default</id>
            <dependencies>
                <dependency>
                    <groupId>org.apereo.cas</groupId>
                    <artifactId>cas-server-webapp${app.server}</artifactId>
                    <version>${cas.version}</version>
                    <type>war</type>
                    <scope>runtime</scope>
                </dependency>
                <!--
                ...Additional dependencies may be placed here...
                -->
            </dependencies>
        </profile>

        <profile>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <id>exec</id>
            <properties>
                <mainClassName>org.apereo.cas.web.CasWebApplication</mainClassName>
                <isExecutable>true</isExecutable>
                <manifestFileToUse></manifestFileToUse>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.soebes.maven.plugins</groupId>
                        <artifactId>echo-maven-plugin</artifactId>
                        <version>0.3.0</version>
                        <executions>
                            <execution>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>echo</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <echos>
                                <echo>Executable profile to make the generated CAS web application executable.</echo>
                            </echos>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <id>bootiful</id>
            <properties>
                <app.server>-tomcat</app.server>
                <isExecutable>false</isExecutable>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.apereo.cas</groupId>
                    <artifactId>cas-server-webapp${app.server}</artifactId>
                    <version>${cas.version}</version>
                    <type>war</type>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <id>pgp</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.s4u.plugins</groupId>
                        <artifactId>pgpverify-maven-plugin</artifactId>
                        <version>1.1.0</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <pgpKeyServer>hkp://pool.sks-keyservers.net</pgpKeyServer>
                            <pgpKeysCachePath>${settings.localRepository}/pgpkeys-cache</pgpKeysCachePath>
                            <scope>test</scope>
                            <verifyPomFiles>true</verifyPomFiles>
                            <failNoSignature>false</failNoSignature>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>dev@de-ws-16</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <!--    -->
                <server.addr>de-ws-16:8443</server.addr>
                <acs.addr>ToBeDefined</acs.addr>
                <cas.dir>/etc/cas</cas.dir>
                <cas.service.definition>dev-1503925298.json</cas.service.definition>

                <!-- JDBC   -->
                <jdbc.url>jdbc:mysql://hobbit:3306/cloud_admin</jdbc.url>
                <jdbc.user>root</jdbc.user>
                <jdbc.pass>prodac</jdbc.pass>

                <!-- LOGGING -->
                <cas.log.dir>${project.build.directory}/logs</cas.log.dir>
                <log4j.cas>debug</log4j.cas>
                <log4j.cas.service.persondir>debug</log4j.cas.service.persondir>


                <!-- KEYSTORE for Spring-Boot embedded Tomcat -->
                <keystore.file>de-ws-16.p12</keystore.file>
                <keystore.pass>acentic</keystore.pass>

            </properties>

        </profile>
        <profile>
            <id>dev@hellboy</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <!--    -->
                <server.addr>192.168.178.137:8443</server.addr>
                <acs.addr>ToBeDefined</acs.addr>
                <cas.dir>/etc/cas</cas.dir>
                <cas.service.definition>dev-1503925298.json</cas.service.definition>
                <cas.throttle.rangeSeconds>25</cas.throttle.rangeSeconds>

                <!-- JDBC   -->
                <jdbc.url>jdbc:mysql://localhost:3306/cloud_admin</jdbc.url>
                <jdbc.user>root</jdbc.user>
                <jdbc.pass>prodac</jdbc.pass>

                <!-- LOGGING -->
                <cas.log.dir>${project.build.directory}/logs</cas.log.dir>
                <log4j.cas>DEBUG</log4j.cas>
                <log4j.cas.web.support>trace</log4j.cas.web.support>
                <log4j.cas.webflow>debug</log4j.cas.webflow>
                <log4j.cas.service.persondir>debug</log4j.cas.service.persondir>
                <log4j.org.thymeleaf>debug</log4j.org.thymeleaf>
                <log4j.org.spring.webflow>debug</log4j.org.spring.webflow>

                <!-- KEYSTORE for Spring-Boot embedded Tomcat -->
                <keystore.file>de-ws-16.p12</keystore.file>
                <keystore.pass>prodac</keystore.pass>

            </properties>

        </profile>
        <profile>
            <id>hobbit</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                
                <!--    -->
                <server.addr>hobbit:8443</server.addr>
                <acs.addr>ToBeDefined</acs.addr>
                <cas.service.definition>dev-1503925298.json</cas.service.definition>

                <!-- JDBC   -->
                <jdbc.url>jdbc:mysql://localhost:3306/cloud_admin</jdbc.url>
                <jdbc.user>root</jdbc.user>
                <jdbc.pass>prodac</jdbc.pass>

                <!-- LOGGING -->
                <cas.log.dir>/var/log/tomcat</cas.log.dir>
                <log4j.cas>DEBUG</log4j.cas>
                <log4j.cas.web.support>trace</log4j.cas.web.support>
                <log4j.cas.service.persondir>debug</log4j.cas.service.persondir>

                <!-- KEYSTORE for Spring-Boot embedded Tomcat -->
                <keystore.file>ToBeDefined</keystore.file>
                <keystore.pass>prodac</keystore.pass>

            </properties>

        </profile>

    </profiles>
</project>
